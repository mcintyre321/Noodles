@using System.Web.Mvc
@using System.Web.Mvc.Html
@using Noodles
@using Noodles.Helpers
@using Noodles.AspMvc.Helpers
@using Noodles.Models
@using Noodles.RequestHandling
@using FormFactory;
@model Noodles.Models.Resource
@helper Render(HtmlHelper helper, Resource resource, IEnumerable<Resource> walked, Func<IHtmlString> getInner)
{
    if (resource.Children.Any())
    {
    <div class="navbar">
        <div class="navbar-inner">
            @if (resource.Parent == null)
            {
                <a class="brand" href="@resource.Url">@resource.DisplayName</a>
            }
            <ul class="nav">
                @foreach (var node in resource.Children)
                {
                    
                    var active = walked.Any(w => w.Url == node.Url);
                    <li @Html.Raw(active ? "class=\"active\"" : "")><a href="@node.Url">@node.DisplayName</a></li>
                }
            </ul>
        </div>
    </div>
    }
    @getInner();
}

@{
    var walked = Model.AncestorsAndSelf.OfType<Resource>().ToArray();
    Func<IHtmlString> content = () => Render(Html, Model, walked, () => Html.BestPartial(Model, Model.Type, "Noodles/NodeBody."));
    foreach (var walkedItem in walked.Skip(1))
    {
        var prev = content;
        var target = walkedItem;
        content = () => Render(Html, target, walked, prev);
    }
    @content();
}