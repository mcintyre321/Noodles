@using System.Web.Mvc
@using System.Web.Mvc.Html
@using Noodles.AspMvc.Models.Layout
@using Noodles.AspMvc.UiAttributes
@using Noodles.AspMvc.Helpers
@using Noodles.Models
@using FormFactory;
@using FormFactory.AspMvc;

@model Noodles.Models.Resource
 
@Body(Html, Model)
@helper Body(HtmlHelper html, Resource resource){
    <div class="noodles-object" data-resource-url="@resource.Url">
        <div class="row">
            <div class="span@(12 - (ViewBag.Indent ?? 0))">
                <div class="noodles-nodebody">
                    @html.BestPartial(resource, resource.ValueType, "Noodles/NodeBody.")
                </div>
                <div class="noodles-properties">
                
                    @{
                        var groupedProperties = new List<NodeProperty>();
                        foreach (var property in resource.NodeProperties)
                        {
                            if (string.IsNullOrWhiteSpace(property.UiHint) && !property.Readonly)
                            {
                                groupedProperties.Add(property);
                                continue;
                            }
                            var viewNameStart = ("Noodles/NodeProperty" + (string.IsNullOrWhiteSpace(property.UiHint) ? "" : ("-" + property.UiHint)));
                            var viewName = Html.BestViewName(property.Value == null ? property.ValueType : property.Value.GetType(), viewNameStart + ".") ?? (viewNameStart + ".Object");
                            @Html.Partial(viewName, property)
                        }
                        if (groupedProperties.Any())
                        {
                            @Html.Partial("Noodles/NodeProperties", groupedProperties)
                        }
                       
                    }
                

                    @foreach(var link in resource.NodeLinks.Hinted("Inline"))
                    {
                        var viewName = Html.BestViewName(link.TargetType, "Noodles/Node.");
                        @Html.Partial(viewName, link.Target)   
                    }
                </div>

                <br />
                @{
                    var nodeMethods = resource.NodeMethods.Hinted("").ToArray();
                    if (nodeMethods.Any())
                    {
                        <div class="well" data-fragment-id="noodle-object-actions">
                            @foreach (var method in nodeMethods)
                            {
                                @NoodlesHelper.NodeMethodLink(method, "btn")
                            }
                            @foreach (var link in resource.NodeLinks.Hinted("MethodWell"))
                            {
                                <a class="btn" href="@link.Url">@link.Target.DisplayName</a>
                            }
                            @foreach (var link in resource.NodeLinks.Hinted("Modal"))
                            {
                                <a class="btn" data-modal="true" href="@link.Url">@link.Target.DisplayName</a>
                            }

                        </div>
                    }
                }

            </div>
        </div>
    </div>
}
 