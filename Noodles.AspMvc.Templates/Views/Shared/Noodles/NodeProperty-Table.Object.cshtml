@using System.Web.Mvc
@using System.Web.Mvc.Html
@using FormFactory
@using FormFactory.Attributes
@using Noodles.AspMvc.Helpers
@using Noodles.AspMvc.UiAttributes
@using Noodles.Models
@model Noodles.Models.NodeCollectionProperty
@{
    var resources = Model.Query(0, int.MaxValue).Items.ToArray();
    var data = resources.Select(i => new
    {
        Resource = i,
        Properties = i.ChildNodes
            .ToDictionary(p => p.DisplayName, p => p)
    }).ToArray();

    var columns = data.SelectMany(d => d.Properties).Select(k => k.Key).Distinct().ToArray();
}

    @if (resources.Any())
    {

        <table class="table-bordered table-condensed table-striped">
            <thead>
                <tr>
                    <th></th>
                    @foreach (var column in columns)
                    {
                        <th>@column</th>
                    }
                    @{
                        ViewBag.ShowActions = resources.SelectMany(i => i.ChildNodes.OfType<NodeMethod>().ToArray()).Any();

                        if (ViewBag.ShowActions)
                        {
                            <th>Actions</th>
                        }
                    }

                </tr>
            </thead>
            <tbody>
                @foreach (var item in resources)
                {
                    var view = Html.BestViewName(item.ValueType, "Noodles/TableRow.");
                    if (view == null)
                    {
                        view = "Noodles/TableRow.Object";
                    }
                    @Html.Partial(view, item, new ViewDataDictionary() { { "Columns", columns }, { "ShowActions", ViewBag.ShowActions } })
                }
            </tbody>
        </table>
}
