@* Generator: MvcHelper *@
@using System.Web.Mvc
@using System.Web.Mvc.Html
@using Noodles
@using Noodles.Helpers
@helper NodeMethodsDropdown(object obj)
    { @NodeMethodsDropdown(obj, null) }
@helper NodeMethodsDropdown(object obj, string additionalClasses)
    {
    if (obj.NodeMethods().Any())
    {
    @BootstrapHelper.DropdownLinksButton("Actions",
            @<text>
    @foreach (var method in obj.NodeMethods())
    {
        @NodeMethodLink(method)
    }
    </text>, additionalClasses)
    }
}
@helper NodeMethodsMenuLink(object obj)
    { @NodeMethodsMenuLink(obj, null) }
@helper NodeMethodsMenuLink(object obj, string additionalClasses)
    {
    if (obj.NodeMethods().Any())
    {
    <a class="nodeMethodsMenuLink @(additionalClasses ?? "")" href="#show actions" data-nodeid="@obj.Id()" data-nodemethodspath="@obj.Path()?action=getNodeMethods">Actions</a>
    }
}
@helper NodeMethodLink(INodeMethod method)
    { @NodeMethodLink(method, null)}
@helper NodeMethodLink(INodeMethod method, string additionalClasses)
    {
    <a class="nodeMethodLink @(additionalClasses ?? "")" href="#@method.Name" data-nodeid="@method.Id()" data-nodepath="@method.Path()">@method.DisplayName</a>
}
@helper NodeMethodForm(System.Web.Mvc.HtmlHelper html, INodeMethod method, string formClass)
    {
    <div class="objectMethod">
        @html.Partial("Noodles/NodeMethod", method, new ViewDataDictionary { { "FormClass", formClass ?? "" } })
    </div>
}
@helper NodeMethodForm(System.Web.Mvc.HtmlHelper html, INodeMethod method, string formClass, ViewDataDictionary dict)
    {
    dict = dict ?? new ViewDataDictionary();
    dict["FormClass"] = formClass;
    @NodeMethodForm(html, method, dict)
}
@helper NodeMethodForm(System.Web.Mvc.HtmlHelper html, INodeMethod method, ViewDataDictionary dict)
    {
    dict = dict ?? new ViewDataDictionary();
    <div class="objectMethod">
        @html.Partial("Noodles/NodeMethod", method, dict)
    </div>
}
@helper NodeMethodFormInline(System.Web.Mvc.HtmlHelper html, INodeMethod method)
    {
    @NodeMethodFormInline(html, method, new ViewDataDictionary())
}
@helper NodeMethodFormInline(System.Web.Mvc.HtmlHelper html, INodeMethod method, ViewDataDictionary viewData)
    {
    viewData = viewData ?? new ViewDataDictionary();
    viewData.Add("Inline", true);
    @NodeMethodForm(html, method, "form-inline", viewData)
}
