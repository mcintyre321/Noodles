@using System.Web.Mvc.Html
@using FormFactory
@using Noodles
@using Noodles.Example.Models
@using Noodles
@using Noodles.Helpers
@using Noodles.Web.Helpers
@using Noodles.DataTables

@model Noodles.Example.Models.ToDoList
@{
    ViewBag.Title = "ToDoList";
}
@helper MailToLink(string email)
    {
    <a href="mailto:@email">@email</a>
}
<h2>ToDoList</h2>
<div class="row">
    <div class="span3">
        @foreach (var method in Model.NodeMethods().Where(m => m.Name != "AddTask"))
        {
            <div>@NoodlesHelper.NodeMethodLink(method, "btn btn-primary")</div>
        }
        @Model.Description
    </div>
    <div class="span9">
        <h4>Tasks</h4>
        @helper Task(Task t)
        {
            <a href="@t.Url()">@t.Text</a>    
        }
        @helper Methods(object o)
        {
            foreach (var method in o.NodeMethods())
            {
                @NoodlesHelper.NodeMethodLink(method)
            }
        }
        @NoodlesHelper.NodeMethodForm(Html, Model.NodeMethods().Single(m => m.Name == "AddTask"), "form-inline", new ViewDataDictionary(){{"Inline", true}})
        <br/>
        @Html.Partial("DataTable", Html.DataTableVmFor(() => Model.Tasks, t => new
        {
            Task = Task(t).ToHtmlString(), 
            t.Status, 
            Actions = NoodlesHelper.NodeMethodsMenuLink(t).ToHtmlString()
        }).Then(vm => vm.TableTools = false).Then(vm => vm.ShowPageSizes = false).Then(vm => vm.ShowSearch = false))
        <br />
        <h4>Users</h4>
        @Html.Partial("DataTable", Html.DataTableVmFor(() => Model.Users, u => new { Email = MailToLink(u.Email).ToHtmlString(), u.Name }).Then(vm => vm.TableTools = false).Then(vm => vm.ShowPageSizes = false).Then(vm => vm.ShowSearch = false))
    </div>
</div>
