@* Generator: MvcHelper *@
@using System.Web.Mvc
@using System.Web.Mvc.Html
@using Noodles
@using Noodles.Helpers

@helper NodeMethodsDropdown(object obj) { @NodeMethodsDropdown(obj, null) }
@helper NodeMethodsDropdown(object obj, string additionalClasses)
{
    if (obj.NodeMethods().Any())
    {
        @BootstrapHelper.DropdownLinksButton("Actions",
            @<text>
                @foreach (var method in obj.NodeMethods())
                {
                    @NodeMethodLink(method)
                }
            </text>, additionalClasses)
    }
}
@helper NodeMethodsMenuLink(object obj) { @NodeMethodsMenuLink(obj, null) }
@helper NodeMethodsMenuLink(object obj, string additionalClasses) {
    <a class="nodeMethodsMenuLink @(additionalClasses ?? "")" href="#show actions" data-nodeid="@obj.Id()" data-nodemethodspath="@obj.Path()?action=getNodeMethods">Actions</a>
}
@helper NodeMethodLink(IObjectMethod method) { @NodeMethodLink(method, null)}
@helper NodeMethodLink(IObjectMethod method, string additionalClasses)
    {
    <a class="nodeMethodLink @(additionalClasses ?? "")" href="#@method.Name" data-nodeid="@method.Id()" data-nodepath="@method.Path()">@method.DisplayName</a>
}

@helper NodeMethodForm(System.Web.Mvc.HtmlHelper html, IObjectMethod method, string formClass) {
    <div class="objectMethod">
        @html.Partial("Noodles/NodeMethod", method, new ViewDataDictionary{{"FormClass", formClass ?? ""}})
    </div>
}
@helper NodeMethodForm(System.Web.Mvc.HtmlHelper html, IObjectMethod method, string formClass, ViewDataDictionary dict) {
    dict = dict ?? new ViewDataDictionary();
    dict["FormClass"] = formClass;
    @NodeMethodForm(html, method, dict)
}

@helper NodeMethodForm(System.Web.Mvc.HtmlHelper html, IObjectMethod method, ViewDataDictionary dict) {
    dict = dict ?? new ViewDataDictionary();
    <div class="objectMethod">
        @html.Partial("Noodles/NodeMethod", method, dict)
    </div>
}



