@using FormFactory
@model PropertyVm
@{
    var enumType = Nullable.GetUnderlyingType(Model.Type) ?? Model.Type;
    
}
@if (Model.IsWritable)
{
    <select name="@Model.Name" @Html.Raw(Model.IsWritable ? "" : "readonly=\"readonly\"")>
        @if (Nullable.GetUnderlyingType(Model.Type) != null)
        {
            <option value="" @Html.Raw(Model.Value == null ? "selected=\"selected\"" : "")></option>
        }
        @foreach (var enumMember in Enum.GetValues(enumType))
        {

            var selected = (Model.Value != null && Model.Value.ToString() == enumMember.ToString());
            <option value="@enumMember.ToString()" @Html.Raw(selected ? "selected=\"selected\"" : "")>@enumMember.ToString().Sentencise(true)</option>
        }
    </select>
}
else
{
    var displayValue = Model.Value == null ? null : Enum.Parse(enumType, Model.Value.ToString());
    
    <input type="text" class="input-large" @Html.Raw(Model.IsWritable ? "" : "readonly=\"readonly\"") value="@displayValue.ToString().Sentencise(true)" />
}